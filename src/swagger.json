{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks REST API",
    "description": "This is a simple REST API for a task manager. It allows you to create, read, update and delete tasks. You can also login and logout to get access to the Tasks."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Tasks",
      "description": "Endpoints for managing tasks"
    },
    {
      "name": "Authentication",
      "description": "Endpoints for authentication"
    }
  ],
  "schemes": ["http"],
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with email and password to get access to the library",
        "description": "This route logs in the user with email and password to get access to the library. If the user is already logged in, a 200 status code is returned. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "email",
            "description": "Email of the user",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password of the user",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/verify": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Verify if user is logged in",
        "description": "This route verifies if the user is logged in and returns the email of the user if logged in.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Logout the user from the server and delete the session cookie",
        "description": "This route logs out the user from the server and deletes the session cookie.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks from the tasks.json and return them as JSON",
        "description": "This route returns all tasks from the tasks.json file.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create task and add it to tasks.json and return it as JSON",
        "description": "This route creates a task and adds it to the tasks.json file. If the user is not logged in, a 401 status code is returned.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "title",
            "description": "Title of the task",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "description": "Description of the task",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "doneAt",
            "description": "Date when the task was done",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "doneAt": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by id from tasks.json and return it as JSON",
        "description": "This route returns a task by its id from the tasks.json file.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update task by id from tasks.json and return it as JSON",
        "description": "This route updates a task by its id from the tasks.json file. If the user is not logged in, a 401 status code is returned.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the task"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "doneAt": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task by id from tasks.json and return it as JSON",
        "description": "This route deletes a task by adding a timestamp into doneAt to the task in the tasks.json file. If the user is not logged in, a 401 status code is returned.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "security": {
    "basicAuth": []
  }
}
